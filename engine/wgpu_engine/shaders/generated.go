// Copyright 2023 the Vello Authors
// Copyright 2024 Dominik Honnef and contributors
// SPDX-License-Identifier: Apache-2.0 OR MIT

// This file is a manually converted version of the shaders.rs file generated by `cargo
// build` in vello_shaders. The file can be found in
// ../target/debug/build/vello_shaders-*/out/shaders.rs.
//
// We have the code necessary to preprocess shaders, but we don't have access to
// information about the shaders. vello_shaders uses naga for this. Naga has a CLI, but it
// can only output transpiled shaders, a textual serialization of the Rust data
// structures, or a binary serialization of the Rust data structures. We could in theory
// parse the last two, but right now we don't want to.

package shaders

import (
	"embed"
	"fmt"
	"path"
)

//go:embed generated/*.wgsl
var sources embed.FS

func source(name string) []byte {
	b, err := sources.ReadFile(path.Join("generated", name+".wgsl"))
	if err != nil {
		panic(fmt.Sprintf("couldn't load shader %q: %s", name, err))
	}
	return b
}

type Shaders struct {
	Backdrop         ComputeShader
	BackdropDyn      ComputeShader
	BboxClear        ComputeShader
	Binning          ComputeShader
	ClipLeaf         ComputeShader
	ClipReduce       ComputeShader
	Coarse           ComputeShader
	DrawLeaf         ComputeShader
	DrawReduce       ComputeShader
	FineArea         ComputeShader
	FineMSAA16       ComputeShader
	FineMSAA8        ComputeShader
	Flatten          ComputeShader
	PathCount        ComputeShader
	PathCountSetup   ComputeShader
	PathTiling       ComputeShader
	PathTilingSetup  ComputeShader
	PathtagReduce    ComputeShader
	PathtagReduce2   ComputeShader
	PathtagScan1     ComputeShader
	PathtagScanLarge ComputeShader
	PathtagScanSmall ComputeShader
	TileAlloc        ComputeShader
}

var Collection = Shaders{
	Backdrop: ComputeShader{
		Name:          ("backdrop"),
		WorkgroupSize: [3]uint32{64, 1, 1},
		Bindings: []BindType{
			Uniform,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 256, index: 0},
		},
		WGSL: WGSLSource{
			Code:           source("backdrop"),
			BindingIndices: []uint8{0, 1},
		},
	},
	BackdropDyn: ComputeShader{
		Name:          ("backdrop_dyn"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			Buffer,
			BufReadOnly,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 1024, index: 0},
			{size_in_bytes: 1024, index: 1},
			{size_in_bytes: 1024, index: 2},
		},
		WGSL: WGSLSource{
			Code:           source("backdrop_dyn"),
			BindingIndices: []uint8{0, 1, 2, 3},
		},
	},
	BboxClear: ComputeShader{
		Name:          ("bbox_clear"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			Buffer,
		},
		WorkgroupBuffers: nil,
		WGSL: WGSLSource{
			Code:           source("bbox_clear"),
			BindingIndices: []uint8{0, 1},
		},
	},
	Binning: ComputeShader{
		Name:          ("binning"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Buffer,
			Buffer,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 8192, index: 0},
			{size_in_bytes: 4096, index: 1},
			{size_in_bytes: 1024, index: 2},
			{size_in_bytes: 4, index: 3},
		},
		WGSL: WGSLSource{
			Code:           source("binning"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5, 6, 7},
		},
	},
	ClipLeaf: ComputeShader{
		Name:          ("clip_leaf"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 4080, index: 0},
			{size_in_bytes: 1024, index: 1},
			{size_in_bytes: 4096, index: 2},
			{size_in_bytes: 4096, index: 3},
			{size_in_bytes: 1024, index: 4},
		},
		WGSL: WGSLSource{
			Code:           source("clip_leaf"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5, 6},
		},
	},
	ClipReduce: ComputeShader{
		Name:          ("clip_reduce"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 2048, index: 0},
			{size_in_bytes: 1024, index: 1},
			{size_in_bytes: 1024, index: 2},
		},
		WGSL: WGSLSource{
			Code:           source("clip_reduce"),
			BindingIndices: []uint8{0, 1, 2, 3},
		},
	},
	Coarse: ComputeShader{
		Name:          ("coarse"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Buffer,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 8192, index: 0},
			{size_in_bytes: 1024, index: 1},
			{size_in_bytes: 1024, index: 2},
			{size_in_bytes: 1024, index: 3},
			{size_in_bytes: 1024, index: 4},
			{size_in_bytes: 1024, index: 5},
			{size_in_bytes: 1024, index: 6},
			{size_in_bytes: 1024, index: 7},
			{size_in_bytes: 1024, index: 8},
		},
		WGSL: WGSLSource{
			Code:           source("coarse"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5, 6, 7, 8},
		},
	},
	DrawLeaf: ComputeShader{
		Name:          ("draw_leaf"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Buffer,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 4096, index: 0},
		},
		WGSL: WGSLSource{
			Code:           source("draw_leaf"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5, 6},
		},
	},
	DrawReduce: ComputeShader{
		Name:          ("draw_reduce"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 4096, index: 0},
		},
		WGSL: WGSLSource{
			Code:           source("draw_reduce"),
			BindingIndices: []uint8{0, 1, 2},
		},
	},
	FineArea: ComputeShader{
		Name:          ("fine_area"),
		WorkgroupSize: [3]uint32{4, 16, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Image,
			ImageRead,
			ImageArrayRead,
		},
		WorkgroupBuffers: nil,
		WGSL: WGSLSource{
			Code:           source("fine_area"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5, 6},
		},
	},
	FineMSAA16: ComputeShader{
		Name:          ("fine_msaa16"),
		WorkgroupSize: [3]uint32{4, 16, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Image,
			ImageRead,
			ImageArrayRead,
			BufReadOnly,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 256, index: 0},
			{size_in_bytes: 16, index: 1},
			{size_in_bytes: 16, index: 2},
			{size_in_bytes: 256, index: 3},
			{size_in_bytes: 4096, index: 4},
		},
		WGSL: WGSLSource{
			Code:           source("fine_msaa16"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5, 6, 7},
		},
	},
	FineMSAA8: ComputeShader{
		Name:          ("fine_msaa8"),
		WorkgroupSize: [3]uint32{4, 16, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Image,
			ImageRead,
			ImageArrayRead,
			BufReadOnly,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 256, index: 0},
			{size_in_bytes: 16, index: 1},
			{size_in_bytes: 16, index: 2},
			{size_in_bytes: 256, index: 3},
			{size_in_bytes: 2048, index: 4},
		},
		WGSL: WGSLSource{
			Code:           source("fine_msaa8"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5, 6, 7},
		},
	},
	Flatten: ComputeShader{
		Name:          ("flatten"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Buffer,
			Buffer,
		},
		WorkgroupBuffers: nil,
		WGSL: WGSLSource{
			Code:           source("flatten"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5},
		},
	},
	PathCount: ComputeShader{
		Name:          ("path_count"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			Buffer,
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Buffer,
		},
		WorkgroupBuffers: nil,
		WGSL: WGSLSource{
			Code:           source("path_count"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5},
		},
	},
	PathCountSetup: ComputeShader{
		Name:          ("path_count_setup"),
		WorkgroupSize: [3]uint32{1, 1, 1},
		Bindings: []BindType{
			Buffer,
			Buffer,
		},
		WorkgroupBuffers: nil,
		WGSL: WGSLSource{
			Code:           source("path_count_setup"),
			BindingIndices: []uint8{0, 1},
		},
	},
	PathTiling: ComputeShader{
		Name:          ("path_tiling"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Buffer,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			BufReadOnly,
			Buffer,
		},
		WorkgroupBuffers: nil,
		WGSL: WGSLSource{
			Code:           source("path_tiling"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5},
		},
	},
	PathTilingSetup: ComputeShader{
		Name:          ("path_tiling_setup"),
		WorkgroupSize: [3]uint32{1, 1, 1},
		Bindings: []BindType{
			Buffer,
			Buffer,
			Buffer,
		},
		WorkgroupBuffers: nil,
		WGSL: WGSLSource{
			Code:           source("path_tiling_setup"),
			BindingIndices: []uint8{0, 1, 2},
		},
	},
	PathtagReduce: ComputeShader{
		Name:          ("pathtag_reduce"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 5120, index: 0},
		},
		WGSL: WGSLSource{
			Code:           source("pathtag_reduce"),
			BindingIndices: []uint8{0, 1, 2},
		},
	},
	PathtagReduce2: ComputeShader{
		Name:          ("pathtag_reduce2"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			BufReadOnly,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 5120, index: 0},
		},
		WGSL: WGSLSource{
			Code:           source("pathtag_reduce2"),
			BindingIndices: []uint8{0, 1},
		},
	},
	PathtagScan1: ComputeShader{
		Name:          ("pathtag_scan1"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			BufReadOnly,
			BufReadOnly,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 5120, index: 0},
			{size_in_bytes: 5120, index: 1},
		},
		WGSL: WGSLSource{
			Code:           source("pathtag_scan1"),
			BindingIndices: []uint8{0, 1, 2},
		},
	},
	PathtagScanLarge: ComputeShader{
		Name:          ("pathtag_scan_large"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 5120, index: 0},
		},
		WGSL: WGSLSource{
			Code:           source("pathtag_scan_large"),
			BindingIndices: []uint8{0, 1, 2, 3},
		},
	},
	PathtagScanSmall: ComputeShader{
		Name:          ("pathtag_scan_small"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 5120, index: 0},
			{size_in_bytes: 5120, index: 1},
		},
		WGSL: WGSLSource{
			Code:           source("pathtag_scan_small"),
			BindingIndices: []uint8{0, 1, 2, 3},
		},
	},
	TileAlloc: ComputeShader{
		Name:          ("tile_alloc"),
		WorkgroupSize: [3]uint32{256, 1, 1},
		Bindings: []BindType{
			Uniform,
			BufReadOnly,
			BufReadOnly,
			Buffer,
			Buffer,
			Buffer,
		},
		WorkgroupBuffers: []WorkgroupBufferInfo{
			{size_in_bytes: 1024, index: 0},
			{size_in_bytes: 4, index: 1},
		},
		WGSL: WGSLSource{
			Code:           source("tile_alloc"),
			BindingIndices: []uint8{0, 1, 2, 3, 4, 5},
		},
	},
}
